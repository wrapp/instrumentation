name: Go

on: pull_request

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: lint
        run: |
          go install golang.org/x/lint/golint
          golint -set_exit_status ./...

  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Vet
        run: |
          go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow
          go vet -vettool=$(which shadow) ./...

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Formatting
        run: |
          go install golang.org/x/tools/cmd/goimports
          GOFMT_OUTPUT="$(goimports -l . 2>&1)"
          if [ -n "$GOFMT_OUTPUT" ]; then
            echo "All the following files are not correctly formatted"
            echo "${GOFMT_OUTPUT}"

            exit 1
          fi
          echo "::set-output name=gofmt-output::Gofmt step succeed"

