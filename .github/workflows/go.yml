name: Go

on: pull_request

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --issues-exit-code=1

  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
      - name: Vet
        run: |
          go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow
          go vet ./...

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
      - name: Formatting
        run: |
          go install golang.org/x/tools/cmd/goimports
          GOFMT_OUTPUT="$(goimports -l . 2>&1)"
          if [ -n "$GOFMT_OUTPUT" ]; then
            echo "All the following files are not correctly formatted"
            echo "${GOFMT_OUTPUT}"

            exit 1
          fi
          echo "::set-output name=gofmt-output::Gofmt step succeed"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
      - name: Test
        run: go test -v -race ./...

